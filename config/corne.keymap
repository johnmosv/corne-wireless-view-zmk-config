/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>

/* from https://github.com/urob/zmk-nodefree-config/tree/8506dbaaee9b46d200aa553a94b6dbca8560a5e1 */

#define HOST_OS 2  // set to 2 for macOS/Windows-Alt-Codes, default is 0 (Windows)

#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/international_chars/swedish.dtsi"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        escapedouble {
            bindings = <&kp ESCAPE>;
            key-positions = <16 19>;
            layers = <0>;
        };
    };

    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <240>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            require-prior-idle-ms = <100>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <240>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 38 37 36>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LEFT_ALT TAB  &kp Q  &kp W            &kp E                &kp R              &lt 3 T              &kp Y               &kp U               &kp I                     &kp O                  &kp P     &kp LEFT_BRACKET
&kp ESC           &kp A  &hmr LEFT_ALT S  &hmr LEFT_COMMAND D  &hmr LEFT_SHIFT F  &hmr LEFT_SHIFT G    &kp H               &kp J               &kp K                     &kp L                  &kp SEMI  &kp SQT
&kp LSHFT         &kp Z  &kp X            &kp C                &kp V              &kp B                &hml RIGHT_SHIFT N  &hml RIGHT_SHIFT M  &hml RIGHT_COMMAND COMMA  &hml RIGHT_ALT PERIOD  &kp FSLH  &kp BACKSPACE
                                          &kp LEFT_SHIFT       &sl 2              &kp LCTRL            &kp SPACE           &mo 1               &mt RIGHT_COMMAND RETURN
            >;
        };

        arrows {
            // right thumb

            bindings = <
&trans      &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &sv_ao
&trans      &none   &none   &none   &none   &none     &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &sv_oe  &sv_ae
&caps_word  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans  &trans
                            &trans  &to 4   &trans    &trans    &trans    &trans
            >;
        };

        special {
            //left thumb

            bindings = <
&kp GRAVE  &kp F1    &kp F2  &kp F3    &kp F4      &kp F5         &kp CARET  &kp AMPS        &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp KP_MULTIPLY  &none
&kp TILDE  &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp EQUAL  &kp MINUS       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE         &none
&none      &none     &none   &none     &none       &none          &kp PLUS   &kp UNDERSCORE  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp BACKSLASH    &trans
                             &trans    &trans      &trans         &trans     &trans          &kp BACKSPACE
            >;
        };

        Bluetooth {
            bindings = <
&bt BT_CLR   &bt BT_PRV  &bt BT_NXT  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans      &trans      &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&bootloader  &trans      &trans      &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                     &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp LS(PLUS)  &kp N7  &kp N8  &kp N9  &kp STAR   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp MINUS     &kp N4  &kp N5  &kp N6  &kp EQUAL  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp N0        &kp N1  &kp N2  &kp N3  &kp N0     &trans
                        &trans  &to 0   &trans    &trans        &trans  &trans
            >;
        };
    };
};
